{"version":3,"sources":["logo.svg","images/header.png","Components/TabPanel.js","Constants.js","Components/ContactForm.js","Components/App/App.js","Components/API/DataGovSGService.js","Components/RainApp/RainApp.js","Components/Root.js","serviceWorker.js","index.js","files/resume.pdf"],"names":["module","exports","TabPanel","props","children","value","index","other","role","hidden","id","aria-labelledby","Box","p","Typography","projectData","title","video","year","language","tools","platform","description","link","educationData","institute","image","qualification","duration","workData","company","contactData","icon","DescriptionIcon","ResumeLink","text","MailIcon","LinkedInIcon","ContactForm","state","name","email","message","verified","inputDisabled","onChange","bind","onSubmit","onCaptchaVerify","onCaptchaExpire","event","target","this","setState","preventDefault","alert","fetch","method","headers","Accept","body","JSON","stringify","then","response","console","log","catch","error","status","Recaptcha","reset","type","style","display","tabindex","autocomplete","Grid","container","direction","justify","alignItems","spacing","item","TextField","required","label","variant","fullWidth","disabled","xs","multiline","rows","sitekey","render","theme","verifyCallback","Button","color","Component","useStyles","makeStyles","root","width","height","headerimage","padding","tabspaper","contentpaper","minHeight","projcard","projcardmediacontainer","paddingTop","position","overflow","projcardmedia","top","left","border","educardmedia","maxWidth","maxHeight","objectFit","workcardmedia","App","classes","createMuiTheme","palette","primary","teal","secondary","pink","React","useState","tabValue","setTabValue","handleChange","newValue","RenderDescription","descArray","desc","i","length","push","RenderTab_Projects","projects","md","xl","Card","className","elevation","CardActionArea","onClick","window","open","CardMedia","component","src","CardContent","gutterBottom","wrap","fontSize","align","Paper","RenderTab_Education","education","RenderTab_Work","work","RenderTab_Contact","contacts","SvgIcon","map","LaunchIcon","ThemeProvider","require","alt","sm","Tabs","centered","indicatorColor","textColor","aria-label","Tab","axios","get","DATA_GOV_SG_URL","RainApp","dataAirTemp","setDataAirTemp","setDataRainfall","setDataRelHumidity","dataRetrieved","setDataRetrieved","stationsSelected","useEffect","RetrieveData","Promise","all","DataGovSGService","Get_AirTemp","Get_Rainfall","Get_RelHumidity","data","items","readings","metadata","stations","Root","exact","path","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9d4a1ea8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/header.606fb2ae.png\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nexport default function TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`nav-tabpanel-${index}`}\r\n      aria-labelledby={`nav-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `nav-tab-${index}`,\r\n    'aria-controls': `nav-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction LinkTab(props) {\r\n  return (\r\n    <Tab\r\n      component=\"a\"\r\n      onClick={(event) => {\r\n        event.preventDefault();\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n","//icons for contactData\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\n\r\nimport ResumeLink from './files/resume.pdf'\r\n\r\nexport const projectData = [\r\n  // {\r\n  //   title: \"Personal Website\",\r\n  //   //video: \"raynoldtan.com\",\r\n  //   year: \"2020\",\r\n  //   language: \"Javascript\",\r\n  //   tools: \"ReactJS and Material-UI\",\r\n  //   platform: \"Web\",\r\n  //   description: [\r\n  //   ],\r\n  //   link: \"raynoldtan.com\",\r\n  // },\r\n  {\r\n    title: \"Fitness App\",\r\n    video: \"https://youtu.be/FdgN4c3AtR4\",\r\n    year: \"2020\",\r\n    language: \"Java\",\r\n    tools: \"Android Studio\",\r\n    platform: \"Android\",\r\n    description: [\r\n      \"Fitness app that allows its users to view weather information (from data.gov.sg) in Singapore and view/edit crowd-sourced data such as location of fitness facilities anywhere in the world\",\r\n    ],\r\n    link: \"https://youtu.be/FdgN4c3AtR4\",\r\n  },\r\n  {\r\n    title: \"Activation App\",\r\n    video: \"https://www.youtube.com/embed/8AwZOFpQwSg\",\r\n    year: \"2018\",\r\n    language: \"Java\",\r\n    tools: \"Android Studio\",\r\n    platform: \"Android\",\r\n    description: [\r\n      \"Self-initiated mobile application idea with the intention to increase the response time of high readiness units in the army.\",\r\n      \"User can add specific phone numbers to the whitelist within the app. Upon receiving a text from any of these numbers, the mobile phone will play an alarm sound, regardless of whether it is in silent mode.\",\r\n    ],\r\n    link: \"https://youtu.be/8AwZOFpQwSg\",\r\n  },\r\n  {\r\n    title: \"Space Arena\",\r\n    video: \"https://www.youtube.com/embed/IX0dHolltBo\",\r\n    year: \"2016\",\r\n    language: \"C#\",\r\n    tools: \"Unity3D\",\r\n    platform: \"Android\",\r\n    description: [\r\n      \"Mobile action game built using Unity3D and C# in 2016.\",\r\n      \"Worked as the project lead, managing the team while being the sole-programmer.\",\r\n      \"Also handled the outsourcing of audio production.\",\r\n    ],\r\n    link: \"https://youtu.be/IX0dHolltBo\",\r\n  },\r\n  {\r\n    title: \"Cyber Evil Terminator\",\r\n    video: \"https://www.youtube.com/embed/_Ivy0j2iYXQ\",\r\n    year: \"2015\",\r\n    language: \"C#\",\r\n    tools: \"Unity3D\",\r\n    platform: \"Android\",\r\n    description: [\r\n      \"Mobile educational game built using Unity3D and C# in 2015.\",\r\n      \"Final Year Project 2 at NYP\",\r\n      \"Achieved second place in the National Crime Prevention Council Mobile Game Design Contest\",\r\n      \"Worked in a group of 3 programmers and 2 artists.\",\r\n      \"Handled gameplay and UI programming.\",\r\n    ],\r\n    link: \"https://youtu.be/_Ivy0j2iYXQ\",\r\n  },\r\n  {\r\n    title: \"Financial Assistance Grand Tourney\",\r\n    video: \"https://www.youtube.com/embed/bICqhb2jjkI\",\r\n    year: \"2015\",\r\n    language: \"C#\",\r\n    tools: \"Unity3D\",\r\n    platform: \"Windows\",\r\n    description: [\r\n      \"Desktop cart racing game built using Unity3D and C# in 2015.\",\r\n      \"Final Year Project while attaining my diploma.\",\r\n      \"Worked in a group of 3 programmers and 2 artists.\",\r\n      \"Handled gameplay, UI and AI programming.\",\r\n    ],\r\n    link: \"https://youtu.be/bICqhb2jjkI\",\r\n  },\r\n];\r\n\r\nexport const educationData = [\r\n  {\r\n    institute: \"Nanyang Technological University (NTU), Singapore\",\r\n    image: \"https://upload.wikimedia.org/wikipedia/en/thumb/f/f8/Nanyang_Technological_University_coat_of_arms_vector.svg/150px-Nanyang_Technological_University_coat_of_arms_vector.svg.png\",\r\n    qualification: \"Bachelor of Engineering in Computer Science\",\r\n    duration: \"2018-2022(expected)\",\r\n    description: [\r\n      \"Sub-Committee Member for the Photo-Videographic Society.\"\r\n    ],\r\n    link: \"http://scse.ntu.edu.sg/Programmes/CurrentStudents/Undergraduate/Pages/CS.aspx\",\r\n  },\r\n  {\r\n    institute: \"Nanyang Polytechnic (NYP), Singapore\",\r\n    image: \"https://lh3.googleusercontent.com/proxy/x5xaZJJS12YRtPAfgduiQRPrOYGrR7HTN0hFcGBoOcjNKkgF5EAnKP0EjrIzJXiy8AHLejEAJQmy7LVF1BYtgYIBUJTY6PsrYFIa0AbpEV3VKpJTc5w\",\r\n    qualification: \"Diploma in Digital Entertainment Technology (Games)\",\r\n    duration: \"2013-2016\",\r\n    description: [\r\n      \"Graduated with a GPA of 3.79.\", \r\n      \"Received Director's List awards for five semesters. \",\r\n      \"Went on an overseas internship at Kajaani University of Applied Sciences, Finland.\",\r\n      \"First runner up in the National Crime Prevention Council Mobile Game Design Contest 2015.\",\r\n      \"Certified with PlayStation Game Development Training.\",\r\n    ],\r\n    link: \"https://www.nyp.edu.sg/schools/sidm/full-time-courses/game-development-and-technology.html\",\r\n  },\r\n];\r\n\r\nexport const workData = [\r\n  {\r\n    company: \"Global eTrade Services\",\r\n    role: \"Software Engineer (Fullstack) Intern\",\r\n    duration: \"May 2020 - Aug 2020 (3 months)\",\r\n    image: \"https://globaletrade.services/themes/gets/logo.svg\",\r\n    description: [\r\n      \"Involved in the implementation and testing phases of DataTX, an artificial intelligence based software tool that allows the user to harness pre-existing information in digital and non-digital format to ease data entry.\", \r\n      \"Developed using JavaScript ,ReactJS and Axios for the front-end web application, and for the back-end using Java, Spring and MongoDB.\",   \r\n      \"Created load testing scripts using Load Runner software.\"\r\n    ],\r\n    link: \"https://globaletrade.services/\"\r\n  },\r\n  {\r\n    company: \"Data Science and Artificial Intelligence Research (DSAIR) Lab @ NTU\",\r\n    role: \"Part-time Student Assistant\",\r\n    duration: \"Aug 2019 - Jan 2020 (6 months)\",\r\n    image: \"https://upload.wikimedia.org/wikipedia/en/thumb/f/f8/Nanyang_Technological_University_coat_of_arms_vector.svg/150px-Nanyang_Technological_University_coat_of_arms_vector.svg.png\",\r\n    description: [\r\n      \"Developed for IntelliK, a game authoring platform which enables creative people to develop artificial intelligence powered digital games without requiring any programming skills, using Unity3D with C#.\",\r\n      \"In charge of porting the application to mobile operating systems.\", \r\n      \"Worked closely with a graphic designer to develop the entire mobile user interface.\"\r\n    ],\r\n    link: \"https://dsair.ntu.edu.sg/Pages/Home.aspx\"\r\n  },\r\n  {\r\n    company: \"Infinito Games\",\r\n    role: \"Full-time Game Developer\",\r\n    duration: \"Jun 2016 - Oct 2016 (5 months)\",\r\n    image: \"https://lh6.googleusercontent.com/CX5zExOrEIv_RI8DzK3nZsp9Ho_rxksEbPmejKPmpKI7ZwitzTYeTr1JHQwKTki9lgQMgxHAMscj835qED0LsWlze3F7B8CiGasYyFRrR95AgtBrzFA=w572\",\r\n    description: [\r\n      \"Developed games and interactive exhibits using Unity3D for multiple platforms.\", \r\n      \"Integrated Virtual and Augmented Reality devices into the applications.\",\r\n      \"Led and supervised small teams to complete the projects.\",\r\n      \"Managed the outsourcing of jobs such as audio creation.\"\r\n    ],\r\n    link: \"https://www.infinitogames.com/\"\r\n  },\r\n];\r\n\r\nexport const contactData = [\r\n  {\r\n    icon: DescriptionIcon,\r\n    link: ResumeLink,\r\n    text: \"Resume\",\r\n  },\r\n  {\r\n    icon: MailIcon,\r\n    link: \"mailto:contact@raynoldtan.com\", \r\n    text: \"contact@raynoldtan.com\",\r\n  },\r\n  {\r\n    icon: LinkedInIcon,\r\n    link: \"linkedin.com/in/raynoldtan/\",\r\n    text: \"linkedin.com/in/raynoldtan/\",\r\n  },\r\n];\r\n\r\nexport const recaptchaKey = \"6LcdwgEVAAAAAJc19Sj50r4akRu4ewLFFpbkkWll\"; //only can be accessed by specific domains\r\n\r\nexport const contactFormLink = \"https://submit-form.com/0uNfM4rkHczwkAioF-bDa\";\r\n\r\nexport const DATA_GOV_SG_URL = \"https://api.data.gov.sg\";","import React, { Component } from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Recaptcha from 'react-recaptcha';\r\nimport {recaptchaKey} from '../Constants';\r\nimport {contactFormLink} from '../Constants';\r\n\r\nclass ContactForm extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      name: '',\r\n      email: '',\r\n      message: '',\r\n      verified: false,\r\n      inputDisabled: false,\r\n    }\r\n    this.onChange = this.onChange.bind(this)\r\n    this.onSubmit = this.onSubmit.bind(this)\r\n    this.onCaptchaVerify = this.onCaptchaVerify.bind(this)\r\n    this.onCaptchaExpire = this.onCaptchaExpire.bind(this)\r\n  }\r\n\r\n  onChange(event) {\r\n    const target = event.target\r\n    const name = target.id\r\n    const value = target.value\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault()\r\n    if (this.state.verified === false)\r\n    {\r\n      alert(\"Please check the reCAPTCHA box\")\r\n      return false;\r\n    }\r\n    else\r\n    {\r\n      this.setState({\r\n        inputDisabled: true\r\n      });\r\n      fetch(contactFormLink, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Accept: 'application/json'\r\n        },\r\n        body: JSON.stringify(this.state)\r\n      })\r\n        .then(function(response) {\r\n          console.log(response)\r\n          alert(\"Email sent successfully!\")\r\n        })\r\n        .catch(function(error) {\r\n          console.error(error)\r\n          alert(\"Error \" + error.status + \"; Please try again later\")\r\n        })\r\n    }\r\n  }\r\n\r\n  onCaptchaVerify(response) {\r\n    if (response)\r\n    {\r\n      console.log(\"Captcha has been successfully verified\")\r\n      this.setState({\r\n        verified: true\r\n      });\r\n    }\r\n    else\r\n    {\r\n      console.log(\"Captcha has failed\")\r\n    }\r\n  }\r\n\r\n  onCaptchaExpire() {\r\n    console.log(\"Captcha has expired, reseting widget\")\r\n    Recaptcha.reset();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <form onSubmit={this.onSubmit}>\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"_honeypot\"\r\n            style={{display: \"none\"}}\r\n            tabindex=\"-1\"\r\n            autocomplete=\"off\"\r\n          />\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"flex-start\"\r\n                alignItems=\"stretch\"\r\n                spacing={2}\r\n                >\r\n                <Grid item>\r\n                    <TextField \r\n                      required \r\n                      id=\"name\" \r\n                      label=\"Name\" \r\n                      variant=\"outlined\" \r\n                      fullWidth={true} \r\n                      value={this.state.name} \r\n                      onChange={this.onChange}\r\n                      disabled={this.state.inputDisabled}/>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField \r\n                      required \r\n                      id=\"email\" \r\n                      label=\"Email\" \r\n                      variant=\"outlined\" \r\n                      fullWidth={true} \r\n                      value={this.state.email} \r\n                      onChange={this.onChange}\r\n                      disabled={this.state.inputDisabled}/>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField \r\n                      required \r\n                      multiline \r\n                      rows={4} \r\n                      id=\"message\" \r\n                      label=\"Message\" \r\n                      variant=\"outlined\" \r\n                      fullWidth={true} \r\n                      value={this.state.message} \r\n                      onChange={this.onChange}\r\n                      disabled={this.state.inputDisabled}/>\r\n                </Grid>\r\n                <Grid item container justify=\"flex-end\" spacing={2}>\r\n                    <Grid item>\r\n                      <Recaptcha\r\n                        sitekey={recaptchaKey}\r\n                        render=\"onload\"\r\n                        theme=\"light\"\r\n                        verifyCallback={this.onCaptchaVerify}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button \r\n                          variant=\"contained\" \r\n                          color=\"secondary\" \r\n                          type=\"submit\"\r\n                          disabled={this.state.inputDisabled}>\r\n                            Submit\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    );\r\n  }\r\n}\r\nexport default ContactForm","import React, { useState } from \"react\";\nimport logo from \"../../logo.svg\";\nimport \"./App.css\";\nimport { Grid, Typography, Paper, makeStyles, Link } from \"@material-ui/core\";\nimport { Button, IconButton } from \"@material-ui/core\";\nimport { Tabs, Tab } from \"@material-ui/core\";\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  CardActionArea,\n  CardActions,\n} from \"@material-ui/core\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport TabPanel from \"../TabPanel\";\nimport { sizing } from '@material-ui/system';\n\n//colors\nimport { teal, pink, grey } from \"@material-ui/core/colors\";\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n//icons for tabs\nimport SchoolIcon from \"@material-ui/icons/School\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport ProjectIcon from \"@material-ui/icons/Code\";\nimport ContactIcon from \"@material-ui/icons/ContactMail\";\n//icons for projects\nimport YearIcon from '@material-ui/icons/EventAvailable';\nimport LanguageIcon from \"@material-ui/icons/Code\";\nimport ToolIcon from '@material-ui/icons/Build';\nimport PlatformIcon from '@material-ui/icons/Devices';\n//icons for education\nimport QualificationIcon from '@material-ui/icons/Assignment';\n//icons for contact\nimport MailIcon from '@material-ui/icons/Mail';\nimport ContactForm from \"../ContactForm\";\nimport LaunchIcon from '@material-ui/icons/Launch';\n//constants\nimport { projectData, educationData, workData, contactData } from '../../Constants';\n\nconst useStyles = makeStyles({\n  root: {\n    //backgroundColor: \"black\",\n    //minHeight: '100vh',\n    width: \"100%\",\n    height: \"100%\"\n  },\n  headerimage: {\n    height: \"15vh\",\n    padding: 10,\n    //width: '200px'\n  },\n  tabspaper: {\n    //width: \"100%\",\n    //backgroundColor: grey[900],\n    justify: 'center',\n  },\n  contentpaper: {\n    //width: '100%',\n    minHeight: \"70vh\",\n    justify: 'center',\n    //backgroundColor: grey[900],\n  },\n  projcard: {\n    //maxWidth: 345,\n    //backgroundColor: grey[800],\n  },\n  projcardmediacontainer: {\n    paddingTop: \"56.25%\", //to maintain 16:9 aspect ratio\n    position:\"relative\",\n    overflow:\"hidden\",\n  },\n  projcardmedia: {\n    position:\"absolute\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    border: 0,\n  },\n  educardmedia: {\n    maxWidth: \"6rem\",\n    maxHeight: '6rem',\n    objectFit: \"contain\",\n    //height: 100,\n    //backgroundColor: 'white',\n  },\n  workcardmedia: {\n    maxWidth: \"6rem\",\n    maxHeight: '6rem',\n    objectFit: \"contain\",\n    //backgroundColor: 'white',\n  },\n});\n\nfunction App() {\n  const classes = useStyles();\n\n  const theme = createMuiTheme({\n    palette: {\n      //type: \"dark\",\n      primary: teal,\n      secondary: pink,\n    },\n  });\n\n  const [tabValue, setTabValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n\n  const RenderHeader = () => {\n    return (\n      <img src={require('../../images/header.png')} className={classes.headerimage} alt='Logo'/>\n    );\n  };\n\n  const RenderTabs = () => {\n    return (\n      <Grid container direction=\"column\" xs={12}>\n        <Tabs\n          value={tabValue}\n          onChange={handleChange}\n          centered\n          //variant=\"fullWidth\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          aria-label=\"icon tabs example\"\n        >\n          <Tab label=\"Projects\" icon={<ProjectIcon />} aria-label=\"Projects\" />\n          <Tab label=\"Education\" icon={<SchoolIcon />} aria-label=\"Education\" />\n          <Tab label=\"Work\" icon={<WorkIcon />} aria-label=\"Work\" />\n          <Tab label=\"Contact\" icon={<ContactIcon />} aria-label=\"Contact\" />\n        </Tabs>\n        <TabPanel value={tabValue} index={0}>\n          {RenderTab_Projects()}\n        </TabPanel>\n        <TabPanel value={tabValue} index={1}>\n          {RenderTab_Education()}\n        </TabPanel>\n        <TabPanel value={tabValue} index={2}>\n          {RenderTab_Work()}\n        </TabPanel>\n        <TabPanel value={tabValue} index={3}>\n          {RenderTab_Contact()}\n        </TabPanel>\n      </Grid>\n    );\n  };\n\n  const RenderDescription = (descArray) => {\n    let desc = [];\n    for (let i = 0; i < descArray.length; i++)\n    {\n      desc.push(descArray[i]);\n      desc.push(<br/>);\n    }\n    return (desc);\n  };\n  \n  const RenderTab_Projects = () => {\n    let projects = [];\n    for (let i = 0; i < projectData.length; i++) {\n      projects.push(\n        <Grid item xs={12} md={6} xl={3}>\n          <Card className={classes.projcard} elevation={1}>\n            <CardActionArea onClick={()=>window.open(projectData[i].link,\"_blank\")}>\n              <Grid container className={classes.projcardmediacontainer}>\n                <CardMedia\n                  component=\"iframe\"\n                  className={classes.projcardmedia}\n                  src={projectData[i].video}\n                  title={projectData[i].title}\n                />\n              </Grid>\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                   {projectData[i].title}\n                </Typography>\n                \n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" wrap=\"nowrap\" spacing={1}>\n                  <Grid item>\n                    <YearIcon color=\"primary\" fontSize='small'/>\n                  </Grid>\n                  <Grid item>\n                  <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\" align=\"left\">\n                    {projectData[i].year}\n                  </Typography>\n                  </Grid>\n                </Grid>\n\n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" wrap=\"nowrap\" spacing={1}>\n                  <Grid item>\n                    <LanguageIcon color=\"primary\" fontSize='small'/>\n                  </Grid>\n                  <Grid item>\n                  <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\" align=\"left\">\n                    {projectData[i].language}\n                  </Typography>\n                  </Grid>\n                </Grid>\n\n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" wrap=\"nowrap\" spacing={1}>\n                  <Grid item>\n                    <ToolIcon color=\"primary\" fontSize='small'/>\n                  </Grid>\n                  <Grid item>\n                  <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\" align=\"left\">\n                    {projectData[i].tools}\n                  </Typography>\n                  </Grid>\n                </Grid>\n\n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" wrap=\"nowrap\" spacing={1}>\n                  <Grid item>\n                    <PlatformIcon color=\"primary\" fontSize='small'/>\n                  </Grid>\n                  <Grid item>\n                  <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\" align=\"left\">\n                    {projectData[i].platform}\n                  </Typography>\n                  </Grid>\n                </Grid>\n                <br/>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\" align=\"left\">\n                  {RenderDescription(projectData[i].description)}\n                </Typography>\n\n              </CardContent>\n            </CardActionArea>\n          </Card>\n        </Grid>\n      );\n    }\n    return (\n      <Paper className={classes.contentpaper} elevation={0}>\n        <Grid container spacing={3} direction='row' justify='center'>\n          {projects}\n        </Grid>\n      </Paper>\n    );\n\n  };\n\n  const RenderTab_Education = () => {\n    let education = [];\n    for (let i = 0; i < educationData.length; i++) {\n      education.push(\n        <Grid item xs={12}>\n          <Card className={classes.projcard} elevation={1}>\n            <CardActionArea onClick={()=>window.open(educationData[i].link,\"_blank\")}>\n              <CardContent>\n\n                <Grid container spacing={2} alignItems=\"flex-start\">\n                  {/* <Grid item xs={2} md={1}>\n                    <CardMedia\n                      component=\"img\"\n                      className={classes.educardmedia}\n                      src={educationData[i].image}\n                      title={educationData[i].institute}\n                    />\n                  </Grid> */}\n                  <Grid item xs={10} md={11}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {educationData[i].institute}\n                    </Typography>\n                    \n                    <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" wrap=\"nowrap\" spacing={1}>\n                      <Grid item>\n                        <QualificationIcon color=\"primary\" fontSize='small'/>\n                      </Grid>\n                      <Grid item>\n                      <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\" align=\"left\">\n                        {educationData[i].qualification}\n                      </Typography>\n                      </Grid>\n                    </Grid>\n\n                    <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" wrap=\"nowrap\" spacing={1}>\n                      <Grid item>\n                        <YearIcon color=\"primary\" fontSize='small'/>\n                      </Grid>\n                      <Grid item>\n                        <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\" align=\"left\">\n                          {educationData[i].duration}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                \n                </Grid>\n                <br/>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\" align=\"left\">\n                  {RenderDescription(educationData[i].description)}\n                </Typography>\n\n              </CardContent>\n            </CardActionArea>\n          </Card>\n        </Grid>\n      );\n    }\n      \n    return (\n      <Paper className={classes.contentpaper} elevation={0}>\n        <Grid container spacing={3} direction='row' justify='center' alignItems='flex-start'>\n          {education}\n        </Grid>\n      </Paper>\n\n    );\n  };\n\n  const RenderTab_Work = () => {\n    let work = [];\n    for (let i = 0; i < workData.length; i++) {\n      work.push(\n        <Grid item xs={12}>\n          <Card className={classes.projcard} elevation={1}>\n            <CardActionArea onClick={()=>window.open(workData[i].link,\"_blank\")}>\n              <CardContent>\n\n                <Grid container spacing={2} alignItems=\"flex-start\">\n                  {/* <Grid item xs={2} md={1}>\n                    <CardMedia\n                      component=\"img\"\n                      className={classes.workcardmedia}\n                      src={workData[i].image}\n                      title={workData[i].company}\n                    />\n                  </Grid> */}\n                  <Grid item xs={10} md={11}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {workData[i].company}\n                    </Typography>\n                    \n                    <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" wrap=\"nowrap\" spacing={1}>\n                      <Grid item>\n                        <QualificationIcon color=\"primary\" fontSize='small'/>\n                      </Grid>\n                      <Grid item>\n                      <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\" align=\"left\">\n                        {workData[i].role}\n                      </Typography>\n                      </Grid>\n                    </Grid>\n\n                    <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" wrap=\"nowrap\" spacing={1}>\n                      <Grid item>\n                        <YearIcon color=\"primary\" fontSize='small'/>\n                      </Grid>\n                      <Grid item>\n                        <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\" align=\"left\">\n                          {workData[i].duration}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                \n                </Grid>\n                <br/>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\" align=\"left\">\n                  {RenderDescription(workData[i].description)}\n                </Typography>\n\n              </CardContent>\n            </CardActionArea>\n          </Card>\n        </Grid>\n      );\n    }\n      \n    return (\n      <Paper className={classes.contentpaper} elevation={0}>\n        <Grid container spacing={3} direction='row' justify='center' alignItems='flex-start'>\n          {work}\n        </Grid>\n      </Paper>\n\n    );\n  };\n\n  const RenderTab_Contact = () => {\n    let contacts = [];\n    contacts.push(\n      <Grid item xs={12}>\n        <Card className={classes.projcard} elevation={1}>\n          {/* <CardActionArea> */}\n            <CardContent>                \n              <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" wrap=\"nowrap\" spacing={1}>\n                <Grid item>\n                  <SvgIcon color=\"primary\" fontSize='large' component={MailIcon}/>\n                </Grid>\n                <Grid item>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\" align=\"left\">\n                  {<ContactForm/>}\n                </Typography>\n                </Grid>\n              </Grid>\n            </CardContent>\n          {/* </CardActionArea> */}\n        </Card>\n      </Grid>\n      );\n    contactData.map((item, index) => {\n      contacts.push(\n        <Grid item xs={12}>\n          <Card className={classes.projcard} elevation={1}>\n            <CardActionArea onClick={()=>window.open(item.link,\"_blank\")}>\n              <CardContent>                \n                <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" wrap=\"nowrap\" spacing={1}>\n                  <Grid item>\n                    <SvgIcon color=\"primary\" fontSize='large' component={item.icon}/>\n                  </Grid>\n                  <Grid item>\n                  <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\" align=\"left\">\n                    {item.text} <SvgIcon color=\"secondary\" fontSize='small' component={LaunchIcon}/>\n                  </Typography>\n                  </Grid>\n                </Grid>\n              </CardContent>\n            </CardActionArea>\n          </Card>\n        </Grid>\n        );\n    });\n\n\n    return (\n      <Paper className={classes.contentpaper} elevation={0}>\n        <Grid container spacing={5} direction='row' justify='center'>\n          {contacts}\n        </Grid>\n      </Paper>\n\n    );\n    return (\n      <Paper className={classes.contentpaper} elevation={0}>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          CONTACT ME\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" align=\"left\">\n          Email: <Link href=\"mailto:RaynoldTanYX@gmail.com\" target=\"_blank\">RaynoldTanYX@gmail.com</Link> <br/>\n          LinkedIn: <Link href=\"https://www.linkedin.com/in/raynoldtan/\" target=\"_blank\">https://www.linkedin.com/in/raynoldtan/</Link>\n        </Typography>\n      </Paper>\n    );\n  };\n\n\n  return (\n    <div className={classes.root}>\n      <ThemeProvider theme={theme}>\n        <Grid container \n        direction='row'\n        justify='center'\n        alignItems='flex-start'>\n          <Grid item>\n            {RenderHeader()}\n          </Grid>\n          <Grid item xs={12} sm={11} md={10}>\n            <Paper elevation={3} className={classes.tabspaper} width='100%'>\n              {RenderTabs()}\n            </Paper>\n          </Grid>\n        </Grid>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import axios from 'axios';\r\nimport { DATA_GOV_SG_URL } from '../../Constants'\r\n\r\nclass DataGovSGService {\r\n    \r\n    Get_AirTemp() {\r\n        return axios.get(DATA_GOV_SG_URL + \"/v1/environment/air-temperature\");\r\n    }\r\n    \r\n    Get_Rainfall() {\r\n        return axios.get(DATA_GOV_SG_URL + \"/v1/environment/rainfall\");\r\n    }\r\n    \r\n    Get_RelHumidity() {\r\n        return axios.get(DATA_GOV_SG_URL + \"/v1/environment/relative-humidity\");\r\n    }\r\n}\r\n\r\nexport default new DataGovSGService();","import React, { useEffect } from 'react';\r\nimport DataGovSGService from '../API/DataGovSGService';\r\n\r\nconst RainApp = () => {\r\n\r\n    const [dataAirTemp, setDataAirTemp] = React.useState();\r\n    const [dataRainfall, setDataRainfall] = React.useState();\r\n    const [dataRelHumidity, setDataRelHumidity] = React.useState();\r\n\r\n    const [dataRetrieved, setDataRetrieved] = React.useState(false);\r\n    const [stationsSelected, setStationsSelected] = React.useState(false);\r\n\r\n    useEffect(() => {\r\n        RetrieveData();\r\n    }, [])\r\n\r\n    const RetrieveData = () => {\r\n        console.log(\"Retrieving data\");\r\n        return Promise.all([\r\n            DataGovSGService.Get_AirTemp(),\r\n            DataGovSGService.Get_Rainfall(),\r\n            DataGovSGService.Get_RelHumidity()\r\n        ])\r\n        .then((response) => {\r\n            console.log(\"Data retrieved\", response);\r\n            setDataAirTemp(response[0].data);\r\n            setDataRainfall(response[1].data);\r\n            setDataRelHumidity(response[2].data);\r\n            setDataRetrieved(true);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    const RenderRetrievingData = () => {\r\n        return (\r\n            <div>\r\n                Retrieving data...\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const RenderStationSelection = () => {\r\n        return (\r\n            <div>\r\n                <p>{dataAirTemp.metadata.stations[0].name}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const RenderData = () => {\r\n        return (\r\n            <div>\r\n                {dataAirTemp.items[0].readings[0]}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        !dataRetrieved ? RenderRetrievingData() :\r\n        !stationsSelected ? RenderStationSelection() :\r\n        RenderData()\r\n    );\r\n    \r\n}\r\n\r\nexport default RainApp;","\r\nimport React from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport App from './App/App';\r\nimport RainApp from './RainApp/RainApp';\r\n\r\nconst Root = () => {\r\n    return (\r\n        <div>           \r\n            <Switch>\r\n            <Route component={App} exact path=\"/\"/>\r\n            <Route component={RainApp} exact path=\"/rain\"/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport Root from './Components/Root';\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Root/>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/resume.3f1bf7f1.pdf\";"],"sourceRoot":""}